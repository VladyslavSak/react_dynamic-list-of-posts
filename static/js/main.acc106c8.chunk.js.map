{"version":3,"sources":["components/PropTypes/PropTypes.js","components/Comment/Comment.js","components/CommentList/CommentList.js","components/Post/Post.js","components/PostList/PostList.js","App.js","index.js"],"names":["userShape","PropTypes","shape","id","number","name","string","username","email","phone","website","adress","street","suite","city","zipcode","geo","lat","lng","compane","catchPhrase","bs","PostListShape","userid","title","body","CommentListShape","postId","Comment","arrayOf","isRequired","user","_ref","comment","react_default","a","createElement","className","CommentList","filteredComments","map","components_Comment_Comment","key","Post","post","comments","concat","address","components_CommentList_CommentList","filter","PostList","posts","components_Post_Post","API_POSTS","API_USER","API_COMMENTS","App","state","listOfPosts","isLoading","isLoaded","hasError","loadData","_callee","_ref2","_ref3","postsFromApi","usersFromApi","commentsFromApi","users","regenerator_default","wrap","_context","prev","next","_this","setState","Promise","all","fetch","sent","Object","slicedToArray","json","_objectSpread","find","userId","t0","stop","_this$state","this","components_PostList_PostList","Fragment","type","onClick","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.acc106c8.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst userShape = PropTypes.shape({\n  id: PropTypes.number,\n  name: PropTypes.string,\n  username: PropTypes.string,\n  email: PropTypes.string,\n  phone: PropTypes.string,\n  website: PropTypes.string,\n  adress: PropTypes.shape({\n    street: PropTypes.string,\n    suite: PropTypes.string,\n    city: PropTypes.string,\n    zipcode: PropTypes.string,\n    geo: PropTypes.shape({\n      lat: PropTypes.string,\n      lng: PropTypes.string,\n    }),\n  }),\n  compane: PropTypes.shape({\n    name: PropTypes.string,\n    catchPhrase: PropTypes.string,\n    bs: PropTypes.string,\n  }),\n});\n\nconst PostListShape = PropTypes.shape({\n  userid: PropTypes.number,\n  id: PropTypes.number,\n  title: PropTypes.string,\n  body: PropTypes.string,\n});\n\nconst CommentListShape = PropTypes.shape({\n  postId: PropTypes.number,\n  id: PropTypes.number,\n  email: PropTypes.string,\n  body: PropTypes.string,\n  title: PropTypes.string,\n});\n\nexport const PostListProps = {\n  posts: PropTypes.arrayOf(PropTypes.shape(PostListShape)).isRequired,\n};\n\nexport const PostProps = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    email: PropTypes.string,\n    user: PropTypes.shape(userShape),\n  }).isRequired,\n  comments: PropTypes.arrayOf(\n    PropTypes.shape(CommentListShape),\n  ).isRequired,\n};\n\nexport const CommentProps = {\n  comment: PropTypes.string,\n  email: PropTypes.string,\n};\n\nexport const CommentListProps = {\n  commentsList: PropTypes.arrayOf(\n    PropTypes.shape(CommentListShape)\n  ).isRequired,\n};\n","import React from 'react';\nimport './Comment.css';\nimport { CommentProps } from '../PropTypes/PropTypes';\n\nconst Comment = ({ comment, email }) => (\n  <div className=\"comment-content\">\n    <h4 className=\"comment__email\">\n      {email}\n    </h4>\n    <p className=\"comment__text\">\n      {comment}\n    </p>\n  </div>\n);\n\nComment.propTypes = CommentProps;\n\nexport default Comment;\n","import React from 'react';\nimport Comment from '../Comment/Comment';\nimport { CommentListProps } from '../PropTypes/PropTypes';\nimport './CommentList.css';\n\nconst CommentList = ({ filteredComments }) => (\n  <div className=\"comment-list\">\n    <h4 className=\"comment-list__title\">\n      Users comments\n    </h4>\n    {filteredComments.map(comment => (\n      <Comment\n        comment={comment.body}\n        email={comment.email}\n        key={comment.id}\n      />\n    ))}\n  </div>\n);\n\nCommentList.propTypes = CommentListProps;\n\nexport default CommentList;\n","import React from 'react';\n\nimport { PostProps } from '../PropTypes/PropTypes';\nimport './Post.css';\nimport CommentList from '../CommentList/CommentList';\n\nconst Post = ({ post, comments }) => {\n  const {\n    id, title, body, user,\n  } = post;\n\n  return (\n    <div className=\"ui card post-info\">\n      <div className=\"content\">\n        <div className=\"header\">\n          <p className=\"post-id\">\n            {id}\n          </p>\n          <p className=\"post-title\">\n            {title}\n          </p>\n        </div>\n        <div className=\"description\">\n          <p>\n            {body}\n          </p>\n\n          <h1 className=\"user__name\">\n            {user.name}\n          </h1>\n          <p className=\"user__email\">\n            {user.email}\n          </p>\n\n          <div className=\"user__address\">\n            <h3 className=\"user__title\">Address of user</h3>\n            <p className=\"user__street\">\n              {`Street: ${user.address.street}`}\n            </p>\n            <p className=\"user__city\">\n              {`City: ${user.address.city}`}\n            </p>\n          </div>\n\n          <CommentList filteredComments={comments\n            .filter(comment => comment.postId === id)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nPost.propTypes = PostProps;\n\nexport default Post;\n","import React from 'react';\nimport './PostList.css';\nimport { PostListProps } from '../PropTypes/PropTypes';\nimport Post from '../Post/Post';\n\nconst PostList = ({ posts, comments }) => (\n  <div className=\"post-list\">\n    {posts.map(post => (\n      <Post post={post} key={post.id} comments={comments} />\n    ))}\n  </div>\n);\n\nPostList.propTypes = PostListProps;\n\nexport default PostList;\n","import React from 'react';\n\nimport PostList from './components/PostList/PostList';\nimport './App.css';\n\nconst API_POSTS = 'https://jsonplaceholder.typicode.com/posts';\nconst API_USER = 'https://jsonplaceholder.typicode.com/users';\nconst API_COMMENTS = 'https://jsonplaceholder.typicode.com/comments';\n\nclass App extends React.Component {\n  state = {\n    listOfPosts: [],\n    comments: [],\n    isLoading: false,\n    isLoaded: false,\n    hasError: false,\n  };\n\n  loadData = async() => {\n    this.setState({\n      isLoading: true,\n      hasError: false,\n    });\n\n    try {\n      const [\n        postsFromApi,\n        usersFromApi,\n        commentsFromApi,\n      ] = await Promise.all([\n        fetch(API_POSTS),\n        fetch(API_USER),\n        fetch(API_COMMENTS),\n      ]);\n\n      const posts = await postsFromApi.json();\n      const users = await usersFromApi.json();\n      const comments = await commentsFromApi.json();\n      const listOfPosts = posts.map(post => ({\n        ...post,\n        user: users.find(user => (user.id === post.userId)),\n      }));\n\n      this.setState({\n        listOfPosts,\n        comments,\n        isLoaded: true,\n      });\n    } catch (error) {\n      this.setState({\n        hasError: true,\n      });\n    }\n\n    this.setState({\n      isLoading: false,\n    });\n  }\n\n  render() {\n    const {\n      listOfPosts, isLoading, isLoaded, hasError, comments,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"app-title\">Dynamic list of posts</h1>\n        {isLoaded ? (\n          <PostList posts={listOfPosts} comments={comments} />\n        ) : (\n          <>\n            {hasError && (\n              <h2 className=\"error\">Error was find! Please, try again!</h2>\n            )}\n            <button\n              type=\"button\"\n              onClick={this.loadData}\n              className=\"info-load\"\n            >\n              {isLoading ? 'Loading...' : 'Load posts'}\n            </button>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}